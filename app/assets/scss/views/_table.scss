.data-table {
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 0.5rem;
    overflow: auto;
}

.data-table .header, .data-table .body .dataRow {
    display: grid;
}

@for $cols from 1 through $data-table-cols {
    .header.columns-#{$cols} {
        grid-template-columns: repeat($cols, 1fr);
        font-weight: 500;
    }

    .body.columns-#{$cols} .dataRow {
        grid-template-columns: repeat($cols, 1fr);
    }

    @if $cols > 3 {
        $default-width: calc(50% * round(calc($cols / 2)));

        // Manejar tanto pares como impares
        $accordion-width: calc($default-width / max(1, round(calc($cols / 2))));

        .data-table .accordion.columns-#{$cols} {
            // width: calc($accordion-width * round(calc($cols / 2)));
            width: calc($accordion-width * round(calc($cols / 2)));
        }

        .header.columns-#{$cols},
        .body.columns-#{$cols} {
            width: $default-width;
        }
    }
}

.data-table .accordion-item:last-of-type {
    border-radius: var(--bs-accordion-inner-border-radius) var(--bs-accordion-inner-border-radius) 0 0;
    border-color: $black;
    border-bottom: none;
}

.data-table .accordion .accordion-item .accordion-header .accordion-button:not(.collapsed) {
    color: $data-table-toolbar-color-active;
    background: $data-table-toolbar-active;
    box-shadow: none;
}

$toolbar-helper: unquote("#{$data-table-toolbar-color-active}");
$toolbar-helper: str-slice($toolbar-helper, 2);

.data-table .accordion .accordion-item .accordion-header .accordion-button:not(.collapsed)::after {
    background-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23#{$toolbar-helper}'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>");
}

.data-table .accordion .accordion-item .accordion-header .accordion-button:focus {
    box-shadow: none;
}

.data-table .header,
.data-table .body {
    border: $data-table-border;
}

.data-table .header {
    border-bottom: none;
}

.accordion-collapse .accordion-body {
    position: relative;
    min-height: 20vh;
}

.accordion-body .table-toolbar {
    position: absolute;
    left: 1rem;
}

.data-table:not(:has(.accordion)) .header {
    border-radius: 1rem 1rem 0 0;
}

.data-table .header .h-col {
    display: grid;
    place-items: center;
    border-right: $data-table-border;
}

.data-table .header .h-col:last-child {
    border-right: none;
}

.data-table .body {
    --body-height: calc(2.5rem * 10);
    position: relative;
    display: grid;
    height: auto;
    max-height: var(--body-height);
    overflow-x: hidden;
    overflow-y: auto;
}

.data-table .body::-webkit-scrollbar {
    display: none;
}

.data-table .body:has(.loading) {
    height: 100%;
    max-height: auto;
}

.data-table .body .loading {
    display: grid;
    place-items: center;
    height: 100%;
    padding: 5rem;
}

.data-table .body .loading .table-error-icon {
    color: $danger;
    animation: table-error-icon .75s linear infinite;
}

.data-table .body .dataRow {
    height: calc(var(--body-height) / 10);
    border-bottom: $data-table-border;
}

.data-table .body .dataRow:last-child {
    border-bottom: none;
}

.data-table .body .dataRow .d-col {
    padding: 0.5rem;
    border-right: $data-table-border;
}

.data-table .body .dataRow .d-col:last-child {
    border-right: none;
}

@import '../animations/table';